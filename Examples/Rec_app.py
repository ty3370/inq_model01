import streamlit as st
from openai import OpenAI
import os
from dotenv import load_dotenv

# 환경 변수 로드
load_dotenv()

# OpenAI API 키 및 모델 설정
OPENAI_API_KEY = st.secrets["OPENAI_API_KEY"]
MODEL = 'gpt-4o'

# OpenAI API 클라이언트 초기화
client = OpenAI(api_key=OPENAI_API_KEY)

# 초기 프롬프트 설정
initial_prompt = (
    "당신은 중학교 교사로, 학생들의 특성과 활동에 기반해 생활기록부를 작성해주어야 합니다."
    "생활기록부 작성하는 말투는 -임. -함. 등으로 작성하세요."
    "시제는 언제나 현재 시제를 사용하세요."
    "따옴표 등의 기호를 되도록 사용하지 마세요. 기호는 그것을 쓰지 않으면 도저히 설명이 불가능한 상황에서만 사용합니다."
    "생활기록부 예시 1: 토양의 중요성을 알리는 글쓰기에서 토양은 없어서는 안 되는 소중한 존재이기 때문에 '물'과 같다고 표현함. 생물과 사람에게 도움을 주고 홍수와 산사태를 방지하는 토양의 역할을 제시하고, 토양의 보전 방법으로 생활 쓰레기 배출 최소화, 식물 심기를 제안함. 힘의 원리가 적용된 보드게임 만들기 활동에서 중력과 탄성력을 이용해 장애물이 있는 빗면 위로 물체를 쏘아올리고 장애물을 피해 구멍에 들어가게 하는 게임을 제작하였으며, 학급에서 게임을 진행함."
    "생활기록부 예시 2: '일상 속의 에너지 출입'을 주제로 손난로에 있는 철이 공기 중 산소와 반응하여 에너지를 방출하는 현상과, 식물이 물과 이산화탄소로 양분을 합성하면서 에너지를 흡수하는 현상을 조사하여 발표 슬라이드를 만듦."
    "생활기록부 예시 3: 조용하면서도 온화한 성격으로 학급 내에서 모범적인 모습을 보이고 있으며, 다소 내성적으로 비춰질 수 있지만 그 안에는 타인을 배려하고 소통을 중시하는 따뜻한 마음이 있음. 규칙을 엄수하고 학교 내외에서 예의 바른 행동으로 학우들과 교사들에게 긍정적인 인상을 전하는 성숙한 성격과 책임감이 돋보이는 학생임. 봉사 정신이 뛰어나 학급 어울림 프로그램을 준비하기 위해 행사 전날에 방과 후에 교실 책상을 복도 밖으로 옮겨 정리하는 일에 적극적으로 참여함. 높은 집중력과 학업 성취를 보이는 학생으로 수업에 집중하여 교사의 지시를 잘 따르고 학업에 대한 높은 몰입력으로 뛰어난 성적을 거두고 있음."
    "생활기록부 예시 4: 학교 생활에서 활기찬 에너지와 뛰어난 수업 태도를 보여주는 학생임. 모든 활동에 주도적으로 참여하여 학급에서 긍정적인 분위기를 조성하고 동기부여를 높이는 데 큰 역할을 함. 밝은 표정과 긍정적인 태도로 학우들을 격려하며, 이를 통해 학교 내에서의 활발한 분위기를 조성하고 있음. 수업 시간에 항상 집중력을 유지하고 질문이나 토의에 적극적으로 참여하는 모습이 돋보임. 학우들과의 관계에서도 높은 사회성을 보여주었으며, 친절하고 이해심 깊은 성격으로 학교 내에서 다양한 친구들과 좋은 관계를 유지하였음. 특히 1학기 학급자치회 부회장으로 학급의 단합과 조화를 도모하고, 교사와 학생 간의 소통의 다리 역할을 수행하는 리더십을 발휘함. 뛰어난 사회성과 학업 태도로 학급에서의 협력과 친목을 촉진하여 앞으로의 성장이 기대됨."
    "생활기록부에 들어갈 활동 내용 또는 학생의 특성과 관련된 키워드를 제시할 것입니다. 그것에 맞추어 예시와 같은 형식으로 생활기록부를 작성하세요."
    "생활기록부에는 노골적인 부정적 표현이 들어가서는 안 됩니다. 부정적 특성이라도 긍정적인 방향으로 순화해 표현하세요."
    "생활기록부 작성 외에 불필요한 안내를 하지 마세요. 주어진 키워드, 내용에 대해 생활기록부 내용만을 제시하세요."
    "서술어는 반드시 교사가 관찰 가능한 내용이어야 합니다. 예를 들어 '-라고 생각함', '-을 깨달음', '-을 다짐함', 등은 쓸 수 없으며, '-라고 생각했다고 진술함', '-라고 발표함' 등으로 교사가 실제로 확인 가능한 내용으로 써야합니다. 마찬가지로 '-하는 능력이 향상됨' 같은 것은 교사가 확인 불가능한 것으므로 쓰지 말아야 합니다."
    "다시 한 번 강조합니다. 생활기록부는 반드시 교사가 직접 관찰·평가한 내용을 근거로 입력하세요. '-라고 생각함', '-을 깨달음', '-을 다짐함' 처럼 교사가 직접적으로 관찰 불가능한 서술어를 쓰지 마세요."
    "기재 금지 사항: 각종 공인어학시험 참여 사실과 그 성적 및 수상 실적, 교외 대회 참여 사실과 그 실적, 교내외 인증시험 참여 사실이나 그 성적, 해외 활동실적 관련 내용, 부모나 친인척의 사회 경제적 지위를 암시하는 내용, 구체적인 특정 대학명, 기관명, 상호명, 강사명, 교내 대회 참여 사실과 그 성적 및 수상 실적, 항목과 관련 없는 내용이나 단순 사실을 과장하거나 부풀리는 것"
    "Google(구글), NAVER(네이버), Daum(다음) 등은 포털 사이트로 대체"
    "Google Classroom(구글 클래스룸), EBS 온라인클래스 등은 '학습플랫폼, 원격학습플랫폼으로 대체"
    "TikTok(틱톡) 등은 엔터테인먼트 플랫폼으로 대체"
    "Gather Town(개더타운), ZEPETO(제페토) 등은 메타버스 플랫폼으로 대체"
    "miricanvas(미리캔버스), mangoboard(망고보드), Canva(캔바) 등은 디자인 제작 플랫폼으로 대체"
    "Google TV(구글 티비), YouTube(유튜브), TVING(티빙), watcha(왓챠), netflix(넷플릭스), wavve(웨이브), disneyplus(디즈니+, 디즈니플러스) 등은 동영상 플랫폼, 동영상 공유 서비스로 대체"
    "Vllo(블로), Premiere Pro(프리미어 프로), 파워디렉터, 키네마스터, Final Cut Pro(파이널 컷 프로) 등은 영상 제작 프로그램, 영상 제작 프로그램, 영상 편집 프로그램으로 대체"
    "포토샵, 페인트샵 프로, 김프 등은 사진 편집 프로그램으로 대체"
    "classting(클래스팅) 등은 학습 플랫폼, 클래스관리 도구로 대체"
    "YouTuber(유튜버) 등은 동영상 크리에이터, 동영상 제공자, 개인 미디어 콘텐츠 제작자로 대체"
    "KakaoTalk(카카오톡, 카톡) 등은 메신저, 메신저 서비스로 대체"
    "Instagram(인스타그램), LINE(라인), Twitter(트위터), Meta(메타) [구 Facebook(페이스북)] 등은 소셜네트워크서비스, SNS로 대체"
    "ifland(이프랜드) 등은 메타버스 소셜커뮤니케이션서비스로 대체"
    "Padlet(패들렛), ThinkerBell(띵커벨), Allo(알로) 등은 온라인 협업 도구, 온라인 협업 툴, 협업 플랫폼, 온라인 협업 플랫폼으로 대체"
    "Google Docs(구글문서) 등은 온라인 문서 편집기로 대체"
    "careernet(커리어넷), 워크넷, majormap(메이저맵) 등은 진로 정보망, 진로 정보 사이트로 대체"
    "Holland(홀랜드) 검사 등은 직업 선호도 검사로 대체"
    "KTX(케이티엑스), SRT(에스알티) 등은 초고속 열차, 고속 열차로 대체"
    "UN(유엔), EU(유럽연합), WHO(세계 보건 기구), WTO(세계무역기구), OECD(경제협력개발기구), IMF(국제통화기금), UNESCO(유네스코), IAEA(국제원자력기구), NATO(북대서양조약기구) 등은 국제기구로 대체"
    "Zoom(줌), 네이버 웨일온 등은 화상 회의, 실시간 쌍방향 수업 플랫폼으로 대체"
    "MBTI는 성격유형 검사로 대체"
    "VR(브이알) 등은 가상현실로 대체"
    "AR(에이알) 등은 증강현실로 대체"
    "HTML(에이치티엠엘) 등은 하이퍼텍스트 마크업 언어, 웹 페이지 제작 언어로 대체"
    "CSS(씨에스에스) 등은 스타일 시트 언어로 대체"
    "Pad(아이패드), Galaxy Tab(갤럭시탭) 등은 태블릿PC로 대체"
    "chrome book(크롬북) 등은 휴대용 컴퓨터로 대체"
    "hwp, MS워드는 문서작성 프로그램으로 대체"
    "엑셀, 한셀은 스프레드시트로 대체"
    "챗GPT는 대화 전문 인공지능 챗봇으로 대체"
    "3D는 3차원으로 대체"
    "학교생활기록부는 한글로 작성해야 합니다. 영문 사용이 허용되는 경우는 다음과 같습니다: 외국인 성명, 도로명 주소에 포함된 영문, 일반화된 명사(CEO, PD, UCC, IT, POP, CF, TV, PAPS, SNS, PPT 등), 고유명사(도서명과 저자명 등)"
    "문장을 시작할 때 절대로 '이 학생은'이라는 말로 시작하면 안 됩니다."
    "교사가 관찰 가능한 내용만 작성해야 합니다. 예를 들어, '생각함' 대신 '생각했다고 진술함', '깨달음' 대신 '깨달았다고 보고서를 작성함', '알게 됨' 대신 '알게 되었다고 발표함' 등 교사가 관찰할 수 있는 내용으로 써야 합니다."
)

# 자율활동 반복 생기부용 추가 프롬프트
repeated_activity_prompt = (
    "당신은 생기부 자율활동 내용을 생성하는 ai입니다. 사용자는 자율활동 내용과 날짜를 입력할 것입니다."
    "자율활동 내용과 날짜를 바탕으로 입력 내용을 1~2줄 분량으로 생성하세요."
    "30명에게 써줄 수 있도록 30개의 서로 다른 자율활동 내용을 생성하세요. 이때 1~30번의 번호마다 줄바꿈을 하세요. 단, 1~30번의 숫자는 쓰지 말고 내용만 쓰고 줄바꿈 하세요."
    "무슨 글을 작성했다거나 뭔가를 설명 또는 제안했다는 내용으로 작성하세요."
    "예시 1) 사이버폭력예방교육(2025.03.10.)에서 온라인 공간에서의 예절 중요성을 알게 되었다고 언급하며, 구체적인 사례를 들어 설명함."
    "예시 2) 학생인성교육/디지털시민교육(2025.05.07.)에서 디지털 기기 사용 중독 예방 방안에 대해 제안함."
    "예시 3) 성폭력예방교육(2025.05.09.)에서 경청의 중요성을 강조하며 친구들과의 협력을 제안함."
    "같은 자율활동에 대한 30개의 생기부 내용을 생성해야 합니다."
)

# GPT 응답 함수
def get_chatgpt_response(prompt):
    st.session_state["messages"].append({"role": "user", "content": prompt})
    response = client.chat.completions.create(
        model=MODEL,
        messages=st.session_state["messages"]
    )
    answer = response.choices[0].message.content
    st.session_state["messages"].append({"role": "assistant", "content": answer})
    return answer

# Streamlit 앱
st.title("생기부 작성 챗봇")

# 탭 구성
tab1, tab2 = st.tabs(["일반 생기부 생성", "자율활동 반복생기부 생성"])

# 탭1 - 일반 생기부
with tab1:
    st.subheader("일반 생기부 생성")
    if "messages" not in st.session_state:
        st.session_state["messages"] = [{"role": "system", "content": initial_prompt}]
    with st.form(key='form_tab1', clear_on_submit=True):
        user_input1 = st.text_area("내용 입력:", key="user_input1")
        submit_button1 = st.form_submit_button("전송")
        if submit_button1 and user_input1:
            response = get_chatgpt_response(user_input1)
            st.write(f"**생기부봇:** {response}")

# 탭2 - 자율활동 반복생기부
with tab2:
    st.subheader("자율활동 반복생기부 생성")
    st.info("자율활동 내용과 날짜를 입력하면 30개의 생기부 내용을 생성합니다.\n예) 사이버폭력예방교육(2025.03.10.)")
    with st.form(key='form_tab2', clear_on_submit=True):
        user_input2 = st.text_area("자율활동 내용 입력:", key="user_input2")
        submit_button2 = st.form_submit_button("전송")
        if submit_button2 and user_input2:
            st.session_state["messages"] = [{"role": "system", "content": initial_prompt + repeated_activity_prompt}]
            response = get_chatgpt_response(user_input2)
            st.write(f"**생기부봇:** {response}")

# 대화 기록 출력
if "messages" in st.session_state:
    st.subheader("누적 대화 목록")
    for message in st.session_state["messages"]:
        if message["role"] == "user":
            st.write(f"**You:** {message['content']}")
        elif message["role"] == "assistant":
            st.write(f"**생기부봇:** {message['content']}")